package CollectionExam;

public class ForExam {
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	<for 예시>
	for(초기화식; 조건식; 증감식){ 반복 실행될 코드 }
	● 초기화식 : 반복문 진입 시 한 번 실행되는 초기화 구문입니다. 반복 변수를 초기화하는 데 사용됩니다.
	● 조건식 : 반복문이 실행될 조건을 평가하는 식입니다. 조건식이 'true'로 평가되면 반복문이 실행되고, 'false'로 평가되면 반복이 종료됩니다.
	● 증감식 : 반복문이 한 번 실행된 후에 실행되는 식입니다. 보통 반복 변수를 증가시키거나 감소시키는 데 사용됩니다.
*/
	public static void main(String[] args) {
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	<for문 실행 순서>
	1. 초기화식이 실행됩니다. 반복 변수가 초기화됩니다.
	2. 조건식이 평가됩니다. 조건식이 'true'로 평가되면 반복문의 코드 블록이 실행되고, 'false'로 평가되면 반복문이 종료됩니다.
	3. 코드 블록이 실행됩니다. 해당 작업을 수행합니다.
	4. 증감식이 실행됩니다. 반복 변수가 업데이트 됩니다.
	5. 조건식으로 돌아가서 조건식을 다시 평가합니다. 평가 결과에 따라 반복이 계속되거나 종료됩니다.
*/
		
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	<'.length' 사용하는 이유>
	'.length'는 배열이나 컬렉션의 크기를 나타내는 속성입니다. 'array.length'또는 'collection.size()'와 같은 형태로 사용됩니다.
	'array'는 배열 변수를 나타내고, 'collection'은 컬렉션 변수를 나타냅니다. '.length'를 사용하여 배열의 길이 또는 컬렉션의 크기를 
	확인할 수 있습니다.
	'for'문에서 '.length'를 사용하는 이유는 배열이나 컬렉션의 모든 요소를 순화하기 위해서 입니다. 반복문의 조건식에서 반복 변수를 배열
	또는 컬렉션의 길이와 비교하여 조건을 평가합니다. 이를 통해 배열이나 컬렉션의 모든 요소를 한 번에 접근할 수 있습니다.
*/	
		//정수 배열에 선언과 동시에 초기화
		int[] numbers = {1,2,3,4,5};
		
		//i < numbers.length 조건식을 사용하여 i 가 배열 numbers 의 길이보가 작은 동안 for 문이 반복 실행됩니다.
		//이를 통해 배열의 모든 요소에 접근하고 출력할 수 있습니다.
		for (int i = 0; i < numbers.length; i++) {
			System.out.println(numbers[i]);	
		}
		//'for'문과 '.length'를 함께 사용하여 반복 작업을 수행하고 배열이나 컬렉션의 요소에 접근할 수 있습니다.
		
		
		
	}

}
