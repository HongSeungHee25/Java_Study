<ArrayList> 와 <LinkedList>의 차이점
1. 내부 데이터 구조 : 
	● 'ArrayList' : 내부적으로 배열(Array)을 사용하여 데이터를 사용합니다. 연속된 메모리 공간에 요소를 저장하며, 인덱스를 통해 빠른
	접근이 가능합니다.
	● 'LinkedList' : 내부적으로 연결 리스트(LinkedList)를 사용하여 데이터를 저장합니다. 각 요소는 자신의 데이터와 다음 요소로의 
	링크를 가지고 있습니다.
2. 데이터 접근과 수정 : 
	● 'ArrayList' : 인덱스를 통해 요소에 빠른 접근이 가능하며, 요소의 삽입 및 삭제가 느리다는 단점이 있습니다. 배열의 크기를 늘리거나
	줄이는 작업이 필요한 경우 성능 저하가 발생할 수 있습니다.
	● 'LinkedList' :  요소의 삽입 및 삭제가 빠르며, 요소 간의 링크 조작으로 이루어지기 때문에 배열 크기 조정이 필요하지 않습니다. 
	하지만 인덱스를 통한 임의의 접근은 성능이 떨어집니다.
3. 메모리 사용 : 
	● 'ArrayList' : 요소를 순차적으로 저장하기 때문에 각 요소는 연속된 메모리 공간에 저장됩니다. 따라서 사용이 상대적으로 적습니다.
	● 'LinkedList' : 각 요소는 자신의 데이터와 다음 요소로의 링크를 가지고 있으므로, 메모리의 사용량이 'ArrayList'보다 더 많을 수 있습니다.
	
따라서, 'ArrayList'는 요소의 순차적인 접근이 주로 필요하고, 삽입 및 삭제가 상대적으로 적은 경우에 유용하며, 'LinkedList'는 요소의 
삽인 및 삭제가 빈번하게 발생하거나 임의의 접근이 필요한 경우에 유용합니다.