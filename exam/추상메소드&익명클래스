<추상 메소드> & <익명 클래스>
1. 추상 메소드(Abstract Method) :
	● 추상 메소드는 메소드의 선언부만 존재하고 구현부는 없는 메소드입니다.
	● 추상 메소드는 추상 클래스에서 선언되며, 해당 클래스를 상속받는 하위 클래스에서 반드시
	구현되어야 합니다.
	● 추상 메소드는 하위 클래스에서 다양한 방식으로 구현될 수 있으며, 다형성을 구현하는 데 사용됩니다.
	● 추상 클래스는 추상 메소들르 포함하고 있기 때문에 객체화할 수 없으며, 추상 클래스를 상속받은 하위 클래스를
	통해 객체를 생성해야 합니다.
2. 익명 클래스(Anonymous Class) :
	● 익명 클래스는 이름이 없는 클래스로, 클래스의 정의와 인스턴스 생성을 동시에 수행합니다.
	● 익명 클래스는 주로 인터페이스나 추상 클래스의 메소드를 구현하거나 재정의할 때 사용됩니다.
	● 익명 클래스는 한 번만 사용될 목적으로 작성되며, 클래스 파일을 따로 생성할 필요가 없습니다.
	● 익명 클래스는 코드의 간결성과 편의성을 제공하며, 특정 인터페이스나 클래스에 대한 구현을 즉석에서 제공하는 방법입니다.

<추상 메소드와 익명 클래스의 차이점> :
	● 추상 메소드는 추상 클래스에서 선언되며, 하위 클래스에서 반드시 구현해야 합니다. 익명 클래스는 클래스의 정의와 인스턴스 생성을
	동시에 수행하며, 주로 인터페이스나 추상 클래스의 메소드를 구현하거나 재정의하는 데 사용됩니다.
	● 추상 메소드는 다른 클래스에서 상속받아 구현되며, 추상 클래스를 통해 객체를 생성합니다. 익명 클래스는 익명 객체로 사용되며, 
	클래스 파일을 따로 생성할 필요가 없습니다.
	● 추상 메소드는 다형성을 구현하는 데 사용되며, 하위 클래스에서 구현 방식을 다양화할 수 있습니다. 익명 클래스는 한 번만 사용될 
	목적으로 작성되며, 특정 인터페이스나 클래스에 대한 구현을 즉석에서 제공하는 방법입니다.
	
>>>>>결론<<<<<
▶ 추상 메소드는 클래스 계층 구조에서 다형성을 구현하기 위해 사용함.
▶ 익명 클래스는 한 번만 사용되는 간당한 구현이 필요한 상황에서 유용하게 활용 됨.